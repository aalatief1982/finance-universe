apply plugin: 'com.android.application'

android {
    namespace "app.xpensia.com"

    // Fallback values in case rootProject.ext is not set
    compileSdk rootProject.ext.has('compileSdkVersion') ? rootProject.ext.compileSdkVersion : 35

    defaultConfig {
        applicationId "app.xpensia.com"
        minSdkVersion rootProject.ext.has('minSdkVersion') ? rootProject.ext.minSdkVersion : 23
        targetSdkVersion rootProject.ext.has('targetSdkVersion') ? rootProject.ext.targetSdkVersion : 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // Optional: if you're using Kotlin in this module
    // kotlinOptions {
    //     jvmTarget = "17"
    // }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation "androidx.core:core-splashscreen:1.0.1"
	
	implementation "androidx.core:core:1.12.0"
	implementation "androidx.core:core-ktx:1.12.0"
	implementation "androidx.work:work-runtime:2.9.0"

    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
}

// Apply Capacitor-specific configuration
apply from: 'capacitor.build.gradle'

// Conditionally apply Google services plugin if JSON file exists
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists() && servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

// Optional: explicitly apply Google services plugin (will do nothing if already applied)
apply plugin: 'com.google.gms.google-services'
